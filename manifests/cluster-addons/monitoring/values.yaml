kube-prometheus-stack:
  grafana:
    enabled: false

loki:
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: 2024-04-01
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    ingester:
      chunk_encoding: snappy
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
    ruler:
      enable_api: true
    querier:
      # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
      max_concurrent: 2

  minio:
    enabled: true

  lokiCanary:
    enabled: true
    push: false

  resultsCache:
    enabled: false

  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1
    persistence:
      enableStatefulSetAutoDeletePVC: true
      enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi
    extraEnv:
      # Keep a little bit lower than memory limits
      - name: GOMEMLIMIT
        value: 400MiB

  chunksCache:
    enabled: false
    # default is 500MB, with limited memory keep this smaller
    writebackSizeLimit: 10MB

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

grafana:
  # grafana.ini:
  #   auth.proxy:
  #     enabled: true
  #     header_name: X-Auth-Request-Email
  #     header_property: email
  #     auto_sign_up: true
  #     headers: Groups:X-Auth-Request-Groups
  #     enable_login_token: false

  persistence:
    enabled: false
    type: pvc

  admin:
    existingSecret: grafana-admin-secret
    userKey: admin-user
    passwordKey: admin-password

  service:
    enabled: true
    type: ClusterIP

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      traefik.ingress.kubernetes.io/router.middlewares: oauth2-proxy-forwardauth@kubernetescrd,oauth2-proxy-errors@kubernetescrd
    hosts:
      - grafana.bakseter.net
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.bakseter.net

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://monitoring-loki-gateway.monitoring.svc.cluster.local:80
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus-operated.monitoring.svc.cluster.local:9090
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
